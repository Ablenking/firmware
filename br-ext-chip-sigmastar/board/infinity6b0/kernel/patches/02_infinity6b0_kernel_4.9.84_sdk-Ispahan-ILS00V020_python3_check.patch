--- a/scripts/ms_bin_option_get_int.py	2021-05-17 00:51:18.868114209 +0300
+++ b/scripts/ms_bin_option_get_int.py	2021-05-17 00:05:08.807550092 +0300
@@ -5,10 +5,16 @@
 if __name__ == '__main__':
 
     name=sys.argv[2]
-#    if sys.argv[3].upper().startswith( '0X' ):
-#        value=long(sys.argv[3],16)
-#    else:
-#        value=long(sys.argv[3])
+    if sys.version_info.major == 2:
+        if sys.argv[3].upper().startswith( '0X' ):
+            value=long(sys.argv[3],16)
+        else:
+            value=long(sys.argv[3])
+    else:
+        if sys.argv[3].upper().startswith( '0X' ):
+            value=int(sys.argv[3],16)
+        else:
+            value=int(sys.argv[3])
 
     fmap=mmap.mmap(os.open(sys.argv[1],os.O_RDWR),0)
 
--- a/scripts/ms_bin_option_update_int.py	2021-05-17 00:51:18.868114209 +0300
+++ b/scripts/ms_bin_option_update_int.py	2021-05-17 01:02:24.277864288 +0300
@@ -3,12 +3,19 @@
 import re, fnmatch, os, sys, mmap, struct
 
 if __name__ == '__main__':
-
-    name=sys.argv[2]
-    if sys.argv[3].upper().startswith( '0X' ):
-        value=long(sys.argv[3],16)
+    print(sys.argv)
+    if sys.version_info.major == 2:
+        name=sys.argv[2]
+        if sys.argv[3].upper().startswith( '0X' ):
+            value=long(sys.argv[3],16)
+        else:
+            value=long(sys.argv[3])
     else:
-        value=long(sys.argv[3])
+        name=sys.argv[2].encode()
+        if sys.argv[3].upper().startswith( '0X' ):
+            value=int(sys.argv[3],16)
+        else:
+            value=int(sys.argv[3])
 
     fmap=mmap.mmap(os.open(sys.argv[1],os.O_RDWR),0)
 
--- a/scripts/ms_builtin_dtb_update.py	2021-05-17 00:51:18.868114209 +0300
+++ b/scripts/ms_builtin_dtb_update.py	2021-05-17 00:02:41.886266869 +0300
@@ -17,6 +17,11 @@
         print ('DTB size 0x%08X too big to fit in 64K limit!!' % dtb.size())
         sys.exit() 
         
+    if sys.version_info.major == 2:
+        name=sys.argv[2]
+    else:
+        name=sys.argv[2].encode()
+
     fmap=mmap.mmap(os.open(sys.argv[1],os.O_RDWR),0)
 
     offset=fmap.find(name)    
